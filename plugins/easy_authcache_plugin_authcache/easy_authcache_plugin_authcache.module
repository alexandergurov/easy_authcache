<?php
define('EASY_AUTHCACHE_PLUGIN_AUTHCACHE', 'easy_authcache_plugin_authcache');
define('EASY_AUTHCACHE_CALLBACK_FILE', 'authcache.ajax.inc');
define('EASY_AUTHCACHE_CALLBACK_HOOK', 'authcache_cached');

/**
 * Implementation hook_easy_authcache_plugin()
 */
function easy_authcache_plugin_authcache_easy_authcache_plugin() {
  return array(
    EASY_AUTHCACHE_PLUGIN_AUTHCACHE => t('Authcache')
  );
}

function easy_authcache_plugin_authcache_easy_authcache_plugin_theme_path() {
  return '';
}

function easy_authcache_plugin_authcache_easy_authcache_plugin_template_name() {
  return 'mock';
}

function easy_authcache_plugin_authcache_easy_authcache_plugin_use_replace() {
  global $is_page_authcache;
  return $is_page_authcache;
}

function easy_authcache_plugin_authcache_easy_authcache_plugin_prepare_mock_vars(&$vars, $hash) {
  static $variables_added = FALSE;
  $params = array();
  $selector = easy_authcache_get_selector($hash);
  $params['easy_authcache'] = array();
  $params['easy_authcache']['items'] = array();
  $params['easy_authcache']['items'][] = $hash;
  drupal_add_js($params, 'setting');
  
  if (!$variables_added) {
    $variables = array();
    $variables['easy_authcache']['single_request'] = variable_get('easy_authcache_single_request', TRUE);
    $max_age = variable_get('easy_authcache_max_age', 3600);
    if (is_numeric($max_age)) {
      $variables['easy_authcache']['max_age'] = $max_age;
    }
    drupal_add_js($variables, 'setting');
    drupal_add_js(drupal_get_path('module', 'easy_authcache_plugin_authcache') . '/js/easy_authcache.js', 'module', 'header');
    $variables_added = TRUE;
  }
  $vars['selector'] = $selector;
}

/**
 *
 * Store list of js files in drupal js settings
 * to make ajax add js faster and undependend of js aggregation
 *
 * @global bool $is_page_authcache flag if current page is for caching
 * @param array $vars variables for page template
 */
function easy_authcache_store_js_files(&$vars) {
  $result = array();
  $js = drupal_add_js(NULL, NULL, NULL);
  foreach ($js as $section) {
    foreach ($section as $key => $items) {
      if ($key != 'inline' && $key != 'setting') {
        foreach ($items as $file_name => $variable) {
          $result[] = $file_name;
        }
      }
    };
  }
  $result = array_unique($result);
  drupal_add_js(array('easy_authcache_js' => $result), 'setting');
    $vars['scripts'] = drupal_get_js();
}

/**
 * Function that handle authcache ajax callback and call easy authcache ajax callbacks for each theme function
 * @param array $data params for all dynamic regions retriving with ajax
 * @return string JSON result array
 */
function easy_authcache_plugin_authcache_process($data) {
  $result = array();
  // TODO: Remake js JSON converter to remove <br> html.
  $data = str_replace('<br>', '', $data);
  $data = json_decode($data);
  foreach ($data as $hash) {
    $result['items'][$hash]['output']= easy_authcache_get_dynamic_region_html($hash);
    // @TODO: Find way to get type for region specific way
    $result['items'][$hash]['type']= 'div';
  }
  $result['js'] = drupal_add_js(NULL, NULL, NULL);
  return json_encode($result);
}

/**
 * Implementation hook_easy_authcache_config()
 */
function easy_authcache_plugin_authcache_easy_authcache_config() {
  $items = array();

  $items['easy_authcache_plugin_authcache'] = array(
    '#type' => 'fieldset',
    '#title' => t('Authcache plugin configuration'),
    '#description' => t('Default easy authcache configuration')
  );

  
  $items['easy_authcache_plugin_authcache']['easy_authcache_single_request'] = array(
    '#type' => 'checkbox', 
    '#title' => t('Use single ajax request'), 
    '#description' => t('If selected plugins will be getted with single ajax, else each plugin will send own ajax request'), 
    '#return_value' => TRUE, 
    '#default_value' => variable_get('easy_authcache_single_request', TRUE));
  
  $items['easy_authcache_plugin_authcache']['easy_authcache_max_age'] = array(
    '#type' => 'textfield', 
    '#title' => t('Max ajax age'), 
    '#default_value' => variable_get('easy_authcache_max_age', 3600)
  );
  
  return $items;
}

/**
 * Implementation hook_theme_registry_alter()
 */
function easy_authcache_plugin_authcache_theme_registry_alter(&$theme_registry) {
  // Add easy_authcache_store_js_files as the last preprocess function for page theme
  _easy_authcache_add_theme_registry_last($theme_registry, 'page', 'easy_authcache_store_js_files');
}

/**
 * Function returns selector to prevent using other modules selectors
 * @param string $cache_id unique id for cache html
 * @return string selector
 */
function easy_authcache_get_selector($cache_id) {
  return 'dynamic-region-' . $cache_id;
}
